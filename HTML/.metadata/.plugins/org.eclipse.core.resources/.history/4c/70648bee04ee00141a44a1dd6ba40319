p 'a*b\\'=~/\\/

str = "cat and dog and and"
if str =~ /cat/
puts "There's a cat here somewhere"
end

File.foreach("/home/di/Desktop/client.rb").with_index do |line,index|
    if line=~/\#/
      line.gsub!(/\#/,'#comments:')
    end
  
end

#The sub method changes only the first match it finds
new_str=str.sub(/and/, 'or')
p new_str

#To replace all matches, use gsub! or sub!
#sub! and gsub! return the string only if the pattern was matched. If no
#match for the pattern is found in the string, they return nil instead.

new_str=str.gsub(/and/,'or')
p new_str

str.gsub!(/and/,'or')
p str

#The Ruby operator =~ matches a string against a pattern. It returns the character offset into
#the string at which the match occurred

/cat/ =~ "dog and cat" # => 8









